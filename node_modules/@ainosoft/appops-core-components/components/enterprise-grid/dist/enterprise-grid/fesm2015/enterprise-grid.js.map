{"version":3,"file":"enterprise-grid.js","sources":["ng://enterprise-grid/action/BaseActionDispatcher.ts","ng://enterprise-grid/lib/enterprise-grid.component.ts","ng://enterprise-grid/common/material-module.ts","ng://enterprise-grid/directive/ao-grid-data.directive.ts","ng://enterprise-grid/directive/ao-actions.directive.ts","ng://enterprise-grid/directive/ao-grid-config.directive.ts","ng://enterprise-grid/lib/enterprise-grid.module.ts","ng://enterprise-grid/action/ActionDispatcher.ts","ng://enterprise-grid/action/GridData.ts"],"sourcesContent":["import { ActionDispatcher } from \"./ActionDispatcher\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BaseActionDispatcher implements ActionDispatcher {\r\n\r\n  actionDispatcher: string;\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Get the token convert it and call the method requested .\r\n   */\r\n  dispatchAction(token: string): void {\r\n    const tokenArray = token.split(\"-\");\r\n    let transformedToken = [];\r\n    for (let i = 0; i < tokenArray.length; i++) {\r\n      if (i !== 0) {\r\n        transformedToken.push(tokenArray[i].charAt(0).toUpperCase() + tokenArray[i].slice(1));\r\n      } else {\r\n        transformedToken.push(tokenArray[i]);\r\n      }\r\n    }\r\n    const methodName = transformedToken.join(\"\");\r\n    console.log(this.actionDispatcher[methodName], methodName);\r\n    this.actionDispatcher[methodName]();\r\n  }\r\n\r\n  get getActionDispatcher() {\r\n    return this.actionDispatcher;\r\n  }\r\n\r\n  set setActionDispatcher(value) {\r\n    this.actionDispatcher = value;\r\n  }\r\n}","import { Component, OnInit, Injectable, ViewChild } from '@angular/core';\r\nimport { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\r\nimport { BaseActionDispatcher } from '../action/BaseActionDispatcher';\r\n\r\n@Component({\r\n  selector: 'ao-enterprise-grid',\r\n  templateUrl: './enterprise-grid.component.html',\r\n  styleUrls: ['./enterprise-grid.component.scss'],\r\n})\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnterpriseGridComponent implements OnInit {\r\n\r\n  gridConfig = new Array();\r\n\r\n  columnConfig = new Array();\r\n  gridDataList = new Array();\r\n  gridHeader: string = '';\r\n\r\n  addNewUserForm = { enable: false, token: '' };\r\n  enableActionToolbar = { enable: false, token: '' };\r\n  enableSearchToolBar = { enable: false, token: '' };\r\n  enableSearchPlaceholder = { enable: 'none', token: '' };\r\n  enableSearchBar = { enable: 'none', token: '' };\r\n  enableForm = { enable: false, token: '' };\r\n  enablePaging: boolean = false;\r\n\r\n  row: HTMLTableRowElement;\r\n  cdkVirtualViewport;\r\n  tdElement: HTMLTableCellElement;\r\n  thElement: HTMLTableHeaderCellElement;\r\n  filterValue;\r\n  checkbox;\r\n\r\n  @ViewChild(CdkVirtualScrollViewport, { static: false }) virtualScroll: CdkVirtualScrollViewport;\r\n\r\n  constructor(private baseActionDispatcher: BaseActionDispatcher) {}\r\n\r\n  ngOnInit() {\r\n    this.columnConfig = [];\r\n  }\r\n\r\n  set setGridData(data) {\r\n    this.gridDataList=data;\r\n    this.createGrid();\r\n    console.log(this.gridDataList, ' enterprise grid list received');\r\n  }\r\n\r\n  set setGridConfig(data) {\r\n    console.log(data, ' enterprise grid config received');\r\n    this.gridHeader = data[0];\r\n    this.columnConfig = data[1];\r\n    this.gridConfig = data[2][0];\r\n\r\n    this.sortGridConfig(this.gridConfig);\r\n  }\r\n\r\n  /**\r\n   * This method sorts the grid configuration.\r\n   * @param gridConfig JSON object of grid configuration.\r\n   */\r\n  sortGridConfig(gridConfig) {\r\n    let keys = Object.keys(gridConfig);\r\n    let enterpGridCompKeys = Object.getOwnPropertyNames(this);\r\n\r\n    for (let i = 0; i < keys.length; i++) {\r\n      for (let j = 0; j < enterpGridCompKeys.length; j++) {\r\n        if (keys[i] === enterpGridCompKeys[j]) {\r\n          this[enterpGridCompKeys[j]]['enable'] = this.gridConfig[keys[i]]['enable'];\r\n          this[enterpGridCompKeys[j]]['token'] = this.gridConfig[keys[i]]['token'];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setWidthByColumn(): number {\r\n    const count = 100 / this.columnConfig.length;\r\n    // console.log(count);\r\n    return count;\r\n  }\r\n\r\n  /** Creates grid rows and add styles */\r\n  createRows() {\r\n    this.row = document.createElement('tr');\r\n    this.row.style.background = 'white';\r\n    this.row.style.padding = '5px';\r\n    this.row.classList.add(\"table-row-data\");\r\n    this.cdkVirtualViewport.appendChild(this.row);\r\n    this.styleCells();\r\n  }\r\n\r\n  /** Creates grid cells and add styles */\r\n\r\n  styleCells() {\r\n    for (let i = 0; i < this.columnConfig.length; i++) {\r\n      this.tdElement = document.createElement('td');\r\n      this.tdElement.style.paddingTop = '10px';\r\n      this.tdElement.style.paddingBottom = '10px';\r\n      this.tdElement.style.padding = '10px';\r\n      this.tdElement.style.textAlign = 'left';\r\n      this.tdElement.style.borderBottom = '1px solid #ddd';\r\n      this.tdElement.style.fontFamily = '\"Questrial\", sans-serif';\r\n      this.tdElement.style.border = 'none';\r\n      this.tdElement.style.outline = 'none';\r\n      this.tdElement.style.height = '39px';\r\n      this.tdElement.style.width = this.setWidthByColumn() + '%';\r\n      this.row.appendChild(this.tdElement);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Create table heading\r\n   */\r\n  createTableHeading(): void {\r\n    const tableHeadDiv = document.getElementsByClassName(\"th-div\")[0] as HTMLElement;\r\n\r\n    if (tableHeadDiv.childElementCount == 0) {\r\n      for (let i = 0; i < this.columnConfig.length; i++) {\r\n        this.thElement = document.createElement('th');\r\n\r\n        this.thElement.style.padding = '10px';\r\n        this.thElement.style.textAlign = 'left';\r\n        this.thElement.style.borderBottom = '1px solid #ddd';\r\n        this.thElement.style.fontFamily = '\"Questrial\", sans-serif';\r\n        this.thElement.style.border = 'none';\r\n        this.thElement.style.outline = 'none';\r\n        this.thElement.style.fontSize = '14px';\r\n        this.thElement.style.letterSpacing = '1px';\r\n        this.thElement.style.height = '16px';\r\n        this.thElement.style.color = 'rgba(0,0,0,.54)';\r\n        // this.thElement.whiteSpace = 'nowrap';\r\n        this.thElement.style.width = this.setWidthByColumn() + '%';\r\n\r\n        if (this.columnConfig[i].name === 'checkbox') {\r\n          this.createCheckbox();\r\n          this.checkbox.style.marginTop = '0px';\r\n          this.thElement.appendChild(this.checkbox);\r\n        } else {\r\n          const headName = this.columnConfig[i].name;\r\n          this.thElement.innerHTML = this.columnConfig[i].item;\r\n          this.thElement.classList.add(headName);\r\n        }\r\n\r\n        tableHeadDiv.appendChild(this.thElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  createCheckbox() {\r\n    this.checkbox = document.createElement(\"INPUT\");\r\n    this.checkbox.setAttribute(\"type\", \"checkbox\");\r\n\r\n    this.checkbox.classList.add('checkbox');\r\n    this.checkbox.style.transition = 'background .4s cubic-bezier(.25,.8,.25,1),box-shadow 280ms cubic-bezier(.4,0,.2,1)';\r\n    this.checkbox.style.cursor = 'pointer';\r\n    this.checkbox.style.height = '16px';\r\n    this.checkbox.style.margin = '6px';\r\n    this.checkbox.style.width = '16px';\r\n    this.checkbox.style.marginLeft = '17px';\r\n  }\r\n\r\n  /** Creates the rows and columns of the grid according to column defs and module data list */\r\n  createGrid() {\r\n    console.log('create grid');\r\n    this.cdkVirtualViewport = document.getElementsByClassName('cdk-virtual-scroll-content-wrapper')[0];\r\n    this.cdkVirtualViewport.style.display = 'inline-table';\r\n\r\n    //Create table heading\r\n    this.createTableHeading();\r\n\r\n    for (let i = 0; i < this.gridDataList.length; i++) {\r\n\r\n      this.createRows();\r\n      this.createCheckbox();\r\n\r\n      for (let moduleListKey in this.gridDataList[i]) {\r\n        for (let columnConfigKey in this.columnConfig) {\r\n          if (this.columnConfig[columnConfigKey].name === moduleListKey) {\r\n            var table = document.getElementsByClassName(\"table-row-data\");\r\n\r\n            var lastRowIndex = table.length;\r\n\r\n            let tableRowData = document.getElementsByClassName('table-row-data')[lastRowIndex - 1] as HTMLTableRowElement;\r\n\r\n            let tableDataCell = tableRowData.cells;\r\n\r\n            let pos = this.columnConfig[columnConfigKey].position;\r\n\r\n            let value = this.gridDataList[i][moduleListKey];\r\n\r\n            tableDataCell[0].appendChild(this.checkbox);\r\n\r\n            tableDataCell[pos].innerHTML = value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Search filteration by name\r\n   *  (Still in progress)\r\n   */\r\n  searchByName(data) {\r\n\r\n    this.gridDataList = [];\r\n    for (let i = 0; i < this.gridDataList.length; i++) {\r\n      if (this.gridDataList[i].firstName.includes(data)) {\r\n        this.gridDataList.push(this.gridDataList[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  getNextBatchOfImages(a) {\r\n\r\n    if (this.virtualScroll.measureScrollOffset('bottom') === 0) {\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Forward the event to dispatch action with tokens and parameters.\r\n   */\r\n  addNewUserFormAction(token): void {\r\n    this.baseActionDispatcher.dispatchAction(token);\r\n  }\r\n\r\n  /** Toggles from search placeholder to search bar/box by setting the display value */\r\n  toggleToSearchBar(action) {\r\n    this.baseActionDispatcher.dispatchAction(action);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModuleSet { \r\n  \r\n}","import { Directive, Input, OnInit } from '@angular/core';\r\nimport { EnterpriseGridComponent } from '../lib/enterprise-grid.component';\r\n\r\n@Directive({\r\n  selector: '[ao-grid-data]'\r\n})\r\nexport class AoGridDataDirective implements OnInit {\r\n\r\n  @Input() gridData;\r\n\r\n  constructor(private enterpGridComp: EnterpriseGridComponent) { }\r\n\r\n  ngOnInit(): void {\r\n    this.gridData.then(\r\n      result => {\r\n        this.enterpGridComp.setGridData = result;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","import { Directive, OnInit, Input } from '@angular/core';\r\nimport { BaseActionDispatcher } from '../action/BaseActionDispatcher';\r\n\r\n@Directive({\r\n  selector: '[ao-actions]'\r\n})\r\nexport class AoActionsDirective implements OnInit {\r\n\r\n  @Input() actionDispatcher;\r\n  \r\n  constructor(private baseActionDispatcher: BaseActionDispatcher) { }\r\n\r\n  ngOnInit(): void {\r\n    this.baseActionDispatcher.setActionDispatcher = this.actionDispatcher;\r\n  }\r\n}\r\n","import { OnInit, Directive, Input, ElementRef } from \"@angular/core\";\r\nimport { EnterpriseGridComponent } from \"../lib/enterprise-grid.component\";\r\n\r\n@Directive({\r\n    selector: '[ao-grid-config]'\r\n})\r\nexport class AoGridConfigDirective implements OnInit {\r\n\r\n    @Input() gridConfig;\r\n    \r\n    constructor(private enterpGridComp: EnterpriseGridComponent) { }\r\n\r\n    ngOnInit(): void {\r\n        this.enterpGridComp.setGridConfig = this.gridConfig;\r\n    }\r\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { EnterpriseGridComponent } from './enterprise-grid.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MaterialModuleSet } from '../common/material-module';\r\nimport { AoGridDataDirective } from '../directive/ao-grid-data.directive';\r\nimport { AoActionsDirective } from '../directive/ao-actions.directive';\r\nimport { AoGridConfigDirective } from '../directive/ao-grid-config.directive';\r\n\r\n@NgModule({\r\n  declarations: [EnterpriseGridComponent, AoGridDataDirective, AoActionsDirective, AoGridConfigDirective],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModuleSet,\r\n  ],\r\n  exports: [EnterpriseGridComponent, AoGridDataDirective,AoActionsDirective, AoGridConfigDirective],\r\n  providers: [ EnterpriseGridComponent],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA\r\n  ],\r\n})\r\nexport class EnterpriseGridModule { }\r\n","export interface ActionDispatcher{\r\n   \r\n    dispatchAction(token: string):void;\r\n\r\n}","export interface GridData {\r\n\r\n    getFirstPage();\r\n}"],"names":[],"mappings":"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"}