/**
 * @fileoverview added by tsickle
 * Generated from: directive/ao-grid-config.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input } from "@angular/core";
import { EnterpriseGridComponent } from "../lib/enterprise-grid.component";
var AoGridConfigDirective = /** @class */ (function () {
    function AoGridConfigDirective(enterpGridComp) {
        this.enterpGridComp = enterpGridComp;
    }
    /**
     * @return {?}
     */
    AoGridConfigDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.enterpGridComp.setGridConfig = this.gridConfig;
    };
    AoGridConfigDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[ao-grid-config]'
                },] }
    ];
    /** @nocollapse */
    AoGridConfigDirective.ctorParameters = function () { return [
        { type: EnterpriseGridComponent }
    ]; };
    AoGridConfigDirective.propDecorators = {
        gridConfig: [{ type: Input }]
    };
    return AoGridConfigDirective;
}());
export { AoGridConfigDirective };
if (false) {
    /** @type {?} */
    AoGridConfigDirective.prototype.gridConfig;
    /**
     * @type {?}
     * @private
     */
    AoGridConfigDirective.prototype.enterpGridComp;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tZ3JpZC1jb25maWcuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZW50ZXJwcmlzZS1ncmlkLyIsInNvdXJjZXMiOlsiZGlyZWN0aXZlL2FvLWdyaWQtY29uZmlnLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBVSxTQUFTLEVBQUUsS0FBSyxFQUFjLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBRTNFO0lBT0ksK0JBQW9CLGNBQXVDO1FBQXZDLG1CQUFjLEdBQWQsY0FBYyxDQUF5QjtJQUFJLENBQUM7Ozs7SUFFaEUsd0NBQVE7OztJQUFSO1FBQ0ksSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUN4RCxDQUFDOztnQkFYSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGtCQUFrQjtpQkFDL0I7Ozs7Z0JBSlEsdUJBQXVCOzs7NkJBTzNCLEtBQUs7O0lBT1YsNEJBQUM7Q0FBQSxBQVpELElBWUM7U0FUWSxxQkFBcUI7OztJQUU5QiwyQ0FBb0I7Ozs7O0lBRVIsK0NBQStDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBEaXJlY3RpdmUsIElucHV0LCBFbGVtZW50UmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgRW50ZXJwcmlzZUdyaWRDb21wb25lbnQgfSBmcm9tIFwiLi4vbGliL2VudGVycHJpc2UtZ3JpZC5jb21wb25lbnRcIjtcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6ICdbYW8tZ3JpZC1jb25maWddJ1xyXG59KVxyXG5leHBvcnQgY2xhc3MgQW9HcmlkQ29uZmlnRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgICBASW5wdXQoKSBncmlkQ29uZmlnO1xyXG4gICAgXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVudGVycEdyaWRDb21wOiBFbnRlcnByaXNlR3JpZENvbXBvbmVudCkgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5lbnRlcnBHcmlkQ29tcC5zZXRHcmlkQ29uZmlnID0gdGhpcy5ncmlkQ29uZmlnO1xyXG4gICAgfVxyXG59Il19