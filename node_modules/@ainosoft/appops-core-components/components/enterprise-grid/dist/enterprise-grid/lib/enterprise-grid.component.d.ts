import { OnInit } from '@angular/core';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { BaseActionDispatcher } from '../action/BaseActionDispatcher';
export declare class EnterpriseGridComponent implements OnInit {
    private baseActionDispatcher;
    gridConfig: any[];
    columnConfig: any[];
    gridDataList: any[];
    gridHeader: string;
    addNewUserForm: {
        enable: boolean;
        token: string;
    };
    enableActionToolbar: {
        enable: boolean;
        token: string;
    };
    enableSearchToolBar: {
        enable: boolean;
        token: string;
    };
    enableSearchPlaceholder: {
        enable: string;
        token: string;
    };
    enableSearchBar: {
        enable: string;
        token: string;
    };
    enableForm: {
        enable: boolean;
        token: string;
    };
    enablePaging: boolean;
    row: HTMLTableRowElement;
    cdkVirtualViewport: any;
    tdElement: HTMLTableCellElement;
    thElement: HTMLTableHeaderCellElement;
    filterValue: any;
    checkbox: any;
    virtualScroll: CdkVirtualScrollViewport;
    constructor(baseActionDispatcher: BaseActionDispatcher);
    ngOnInit(): void;
    setGridData: any;
    setGridConfig: any;
    /**
     * This method sorts the grid configuration.
     * @param gridConfig JSON object of grid configuration.
     */
    sortGridConfig(gridConfig: any): void;
    setWidthByColumn(): number;
    /** Creates grid rows and add styles */
    createRows(): void;
    /** Creates grid cells and add styles */
    styleCells(): void;
    /**
     * Create table heading
     */
    createTableHeading(): void;
    createCheckbox(): void;
    /** Creates the rows and columns of the grid according to column defs and module data list */
    createGrid(): void;
    /** Search filteration by name
     *  (Still in progress)
     */
    searchByName(data: any): void;
    getNextBatchOfImages(a: any): void;
    /**
     * Forward the event to dispatch action with tokens and parameters.
     */
    addNewUserFormAction(token: any): void;
    /** Toggles from search placeholder to search bar/box by setting the display value */
    toggleToSearchBar(action: any): void;
}
