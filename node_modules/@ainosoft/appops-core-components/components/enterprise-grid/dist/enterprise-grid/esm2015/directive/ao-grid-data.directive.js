/**
 * @fileoverview added by tsickle
 * Generated from: directive/ao-grid-data.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input } from '@angular/core';
import { EnterpriseGridComponent } from '../lib/enterprise-grid.component';
export class AoGridDataDirective {
    /**
     * @param {?} enterpGridComp
     */
    constructor(enterpGridComp) {
        this.enterpGridComp = enterpGridComp;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.gridData.then((/**
         * @param {?} result
         * @return {?}
         */
        result => {
            this.enterpGridComp.setGridData = result;
        }), (/**
         * @param {?} error
         * @return {?}
         */
        error => {
            console.log(error);
        }));
    }
}
AoGridDataDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ao-grid-data]'
            },] }
];
/** @nocollapse */
AoGridDataDirective.ctorParameters = () => [
    { type: EnterpriseGridComponent }
];
AoGridDataDirective.propDecorators = {
    gridData: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    AoGridDataDirective.prototype.gridData;
    /**
     * @type {?}
     * @private
     */
    AoGridDataDirective.prototype.enterpGridComp;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW8tZ3JpZC1kYXRhLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2VudGVycHJpc2UtZ3JpZC8iLCJzb3VyY2VzIjpbImRpcmVjdGl2ZS9hby1ncmlkLWRhdGEuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDekQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFLM0UsTUFBTSxPQUFPLG1CQUFtQjs7OztJQUk5QixZQUFvQixjQUF1QztRQUF2QyxtQkFBYyxHQUFkLGNBQWMsQ0FBeUI7SUFBSSxDQUFDOzs7O0lBRWhFLFFBQVE7UUFDTixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7Ozs7UUFDaEIsTUFBTSxDQUFDLEVBQUU7WUFDUCxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7UUFDM0MsQ0FBQzs7OztRQUNELEtBQUssQ0FBQyxFQUFFO1lBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNyQixDQUFDLEVBQ0YsQ0FBQTtJQUNILENBQUM7OztZQWxCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjthQUMzQjs7OztZQUpRLHVCQUF1Qjs7O3VCQU83QixLQUFLOzs7O0lBQU4sdUNBQWtCOzs7OztJQUVOLDZDQUErQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBFbnRlcnByaXNlR3JpZENvbXBvbmVudCB9IGZyb20gJy4uL2xpYi9lbnRlcnByaXNlLWdyaWQuY29tcG9uZW50JztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW2FvLWdyaWQtZGF0YV0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBb0dyaWREYXRhRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KCkgZ3JpZERhdGE7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZW50ZXJwR3JpZENvbXA6IEVudGVycHJpc2VHcmlkQ29tcG9uZW50KSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICB0aGlzLmdyaWREYXRhLnRoZW4oXHJcbiAgICAgIHJlc3VsdCA9PiB7XHJcbiAgICAgICAgdGhpcy5lbnRlcnBHcmlkQ29tcC5zZXRHcmlkRGF0YSA9IHJlc3VsdDtcclxuICAgICAgfSxcclxuICAgICAgZXJyb3IgPT4ge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgKVxyXG4gIH1cclxuXHJcbn1cclxuIl19