import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { FormConfig } from '../config/FormConfig';
import { ActionConfig } from '../config/ActionConfig';

@Injectable({
  providedIn: 'root'
})
export class EnterpriseFormService {

  list: String[];
  enableGrid: boolean;
  enableMetaConfig: boolean;

  constructor(private formConfigComp?: FormConfig, private actionConfigComp?: ActionConfig) { }

   /** makes the @currentList as an observable, which emits the current list(updated list)
   *  and can be subscribed by any component.
  */
 public moduleListSource = new BehaviorSubject<any[]>(this.list);
 currentList = this.moduleListSource.asObservable();
 
  public enableGridSource = new BehaviorSubject<boolean>(this.enableGrid);
  currentEnableGridValue = this.enableGridSource.asObservable();

  public enableMetaConfigSource = new BehaviorSubject<boolean>(this.enableMetaConfig);
  currentEnableMetaConfigValue = this.enableMetaConfigSource.asObservable();
  
   /** sets the grid list/data provided by the respective external modules(apps/plugins). */
   setFormList(data: any[]) {
     console.log(data);
    this.list=new Array();
    for(let i=0;i<data.length;i++){
      this.list.push(data[i]);
    }
    this.moduleListSource.next(this.list);  
  }

  enableOpenGridAction(value: boolean) {
    this.enableGrid = value;
    this.enableGridSource.next(this.enableGrid);
  }

  /** sets the form header/name provided from their respective external modules(apps/plugins). */
  setFormHeader(formHeader: string) {
    this.formConfigComp.setFormHeader = formHeader;
  }

  enableModuleName(value: boolean) {
    this.actionConfigComp.setModuleNameValue = value;
  }

  enableUserRole(value: boolean) {
    this.actionConfigComp.setUserRoleValue = value;
  }

  enableRefPackage(value: boolean) {
    this.actionConfigComp.setRefPackageValue = value;
    console.log(value);
  }

  enableBasePrice(value: boolean) {
    this.actionConfigComp.setBasePriceValue = value;
  }

  enableSubFrequency(value: boolean) {
    this.actionConfigComp.setSubFrequencyValue = value;
  }

  enableOpenMetaConfigAction(value: boolean) {
    this.enableMetaConfig = value;
    this.enableMetaConfigSource.next(this.enableMetaConfig);
  }
}
