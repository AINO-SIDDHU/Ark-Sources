import { Component, OnInit } from '@angular/core';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { EnterpriseFormService } from './enterprise-form.service';
import { FormConfig } from '../config/FormConfig';
import { ActionConfig } from '../config/ActionConfig';

@Component({
  selector: 'lib-enterprise-form',
  templateUrl: './enterprise-form.component.html',
  styleUrls: ['./enterprise-form.component.scss'],
})
export class EnterpriseFormComponent implements OnInit {

  firstFormGroup: FormGroup;
  secondFormGroup: FormGroup;
  isEditable = false;
  isLinear = true;
  enableGrid = false;
  formHeader: string;
  referencePackageList: any[] = [];

  enableModuleName = false;
  enableUserRole = false;
  enableRefPackage = false;
  enableBasePrice = false;
  enableSubFrequency = false;
  enableMetaConfig: boolean = false;

  constructor(private _formBuilder: FormBuilder, private enterpFormService: EnterpriseFormService, private formConfig: FormConfig, private actionConfig: ActionConfig) {

    /** subscribes to the last emitted grid list (current list) from the behaviour subject
     *  @currentList observable instance.
     */
    this.enterpFormService.currentList.subscribe(data => {
      console.log(data, 'form moduleList');
      for(let i in data) {
        if(data[i].status === 'ready' || data[i].status === 'subscribed') {
          this.referencePackageList.push(data[i].packageName);
        }
      }

    });

    this.formConfig.currentFormHeader.subscribe(data => {
      this.formHeader = data;
    });

    this.actionConfig.currModuleNameValue.subscribe(data => {
      this.enableModuleName = data;
    });

    this.actionConfig.currUserRoleValue.subscribe(data => {
      this.enableUserRole = data;
    });

    this.actionConfig.currRefPackageValue.subscribe(data => {
      this.enableRefPackage = data;
    });

    this.actionConfig.curreBasePriceValue.subscribe(data => {
      this.enableBasePrice = data;
    });

    this.actionConfig.curreSubFrequencyValue.subscribe(data => {
      this.enableSubFrequency = data;
    });
  }

  ngOnInit(): void {
    this.firstFormGroup = this._formBuilder.group({
      firstCtrl: ['', Validators.required],
      first2Ctrl: ['', Validators.required],
    });

    this.secondFormGroup = this._formBuilder.group({
      secondCtrl: ['', Validators.required]
    });
  }

  backToTable() {
    this.enableGrid = true;
    this.enterpFormService.enableOpenGridAction(this.enableGrid);
  }

  openMetaConfig() {
    this.enableMetaConfig = true;
    this.enterpFormService.enableOpenMetaConfigAction(this.enableMetaConfig);
  }
}
